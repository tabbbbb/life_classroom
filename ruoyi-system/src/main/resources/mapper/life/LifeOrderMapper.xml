<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.life.mapper.LifeOrderMapper">
    
    <resultMap type="LifeOrder" id="LifeOrderResult">
        <result property="orderId"    column="order_id"    />
        <result property="pid"    column="pid"    />
        <result property="courseType"    column="course_type"    />
        <result property="status"    column="status"    />
        <result property="userId"    column="user_id"    />
        <result property="shareId"    column="share_id"    />
        <result property="courseId"    column="course_id"    />
        <result property="courseDetailId"    column="course_detail_id"    />
        <result property="remark"    column="remark"    />
        <result property="checkId"    column="check_id"    />
        <result property="couponId"    column="coupon_id"    />
        <result property="couponPoint"    column="coupon_point"    />
        <result property="saleUser"    column="sale_user"    />
        <result property="payPoint"    column="pay_point"    />
        <result property="totalPoint"    column="total_point"    />
        <result property="phone"    column="phone"    />
        <result property="donate"    column="donate"    />
        <result property="price"    column="price"    />
        <result property="courseDuration"    column="course_duration"    />
        <result property="consumeTime"    column="consume_time"    />
        <result property="orderTime"    column="order_time"    />
        <result property="useTime"    column="use_time"    />
        <result property="validRefundTime"    column="valid_refund_time"    />
    </resultMap>

    <sql id="selectLifeOrderVo">
        select order_id, pid, course_type, status, user_id, share_id, course_id, course_detail_id, remark, check_id, coupon_id, coupon_point, sale_user, pay_point, total_point, phone, donate, price, course_duration, consume_time, order_time, use_time, valid_refund_time from life_order
    </sql>

    <select id="selectLifeOrderList" parameterType="LifeOrder" resultMap="LifeOrderResult">
        <include refid="selectLifeOrderVo"/>
        <where>  
            <if test="pid != null "> and pid = #{pid}</if>
            <if test="courseType != null "> and course_type = #{courseType}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="shareId != null "> and share_id = #{shareId}</if>
            <if test="courseId != null "> and course_id = #{courseId}</if>
            <if test="courseDetailId != null "> and course_detail_id = #{courseDetailId}</if>
            <if test="checkId != null "> and check_id = #{checkId}</if>
            <if test="couponId != null "> and coupon_id = #{couponId}</if>
            <if test="couponPoint != null "> and coupon_point = #{couponPoint}</if>
            <if test="saleUser != null "> and sale_user = #{saleUser}</if>
            <if test="payPoint != null "> and pay_point = #{payPoint}</if>
            <if test="totalPoint != null "> and total_point = #{totalPoint}</if>
            <if test="phone != null  and phone != ''"> and phone = #{phone}</if>
            <if test="donate != null "> and donate = #{donate}</if>
            <if test="price != null "> and price = #{price}</if>
            <if test="courseDuration != null "> and course_duration = #{courseDuration}</if>
            <if test="consumeTime != null "> and consume_time = #{consumeTime}</if>
            <if test="orderTime != null "> and order_time = #{orderTime}</if>
            <if test="useTime != null "> and use_time = #{useTime}</if>
            <if test="validRefundTime != null "> and valid_refund_time = #{validRefundTime}</if>
        </where>
    </select>
    
    <select id="selectLifeOrderById" parameterType="String" resultMap="LifeOrderResult">
        <include refid="selectLifeOrderVo"/>
        where order_id = #{orderId}
    </select>
        
    <insert id="insertLifeOrder" parameterType="LifeOrder">
        insert into life_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null  and orderId != ''">order_id,</if>
            <if test="pid != null ">pid,</if>
            <if test="courseType != null ">course_type,</if>
            <if test="status != null ">status,</if>
            <if test="userId != null ">user_id,</if>
            <if test="shareId != null ">share_id,</if>
            <if test="courseId != null ">course_id,</if>
            <if test="courseDetailId != null ">course_detail_id,</if>
            <if test="remark != null  and remark != ''">remark,</if>
            <if test="checkId != null ">check_id,</if>
            <if test="couponId != null ">coupon_id,</if>
            <if test="couponPoint != null ">coupon_point,</if>
            <if test="saleUser != null ">sale_user,</if>
            <if test="payPoint != null ">pay_point,</if>
            <if test="totalPoint != null ">total_point,</if>
            <if test="phone != null  and phone != ''">phone,</if>
            <if test="donate != null ">donate,</if>
            <if test="price != null ">price,</if>
            <if test="courseDuration != null ">course_duration,</if>
            <if test="consumeTime != null ">consume_time,</if>
            <if test="orderTime != null ">order_time,</if>
            <if test="useTime != null ">use_time,</if>
            <if test="validRefundTime != null ">valid_refund_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null  and orderId != ''">#{orderId},</if>
            <if test="pid != null ">#{pid},</if>
            <if test="courseType != null ">#{courseType},</if>
            <if test="status != null ">#{status},</if>
            <if test="userId != null ">#{userId},</if>
            <if test="shareId != null ">#{shareId},</if>
            <if test="courseId != null ">#{courseId},</if>
            <if test="courseDetailId != null ">#{courseDetailId},</if>
            <if test="remark != null  and remark != ''">#{remark},</if>
            <if test="checkId != null ">#{checkId},</if>
            <if test="couponId != null ">#{couponId},</if>
            <if test="couponPoint != null ">#{couponPoint},</if>
            <if test="saleUser != null ">#{saleUser},</if>
            <if test="payPoint != null ">#{payPoint},</if>
            <if test="totalPoint != null ">#{totalPoint},</if>
            <if test="phone != null  and phone != ''">#{phone},</if>
            <if test="donate != null ">#{donate},</if>
            <if test="price != null ">#{price},</if>
            <if test="courseDuration != null ">#{courseDuration},</if>
            <if test="consumeTime != null ">#{consumeTime},</if>
            <if test="orderTime != null ">#{orderTime},</if>
            <if test="useTime != null ">#{useTime},</if>
            <if test="validRefundTime != null ">#{validRefundTime},</if>
         </trim>
    </insert>

    <update id="updateLifeOrder" parameterType="LifeOrder">
        update life_order
        <trim prefix="SET" suffixOverrides=",">
            <if test="pid != null ">pid = #{pid},</if>
            <if test="courseType != null ">course_type = #{courseType},</if>
            <if test="status != null ">status = #{status},</if>
            <if test="userId != null ">user_id = #{userId},</if>
            <if test="shareId != null ">share_id = #{shareId},</if>
            <if test="courseId != null ">course_id = #{courseId},</if>
            <if test="courseDetailId != null ">course_detail_id = #{courseDetailId},</if>
            <if test="remark != null  and remark != ''">remark = #{remark},</if>
            <if test="checkId != null ">check_id = #{checkId},</if>
            <if test="couponId != null ">coupon_id = #{couponId},</if>
            <if test="couponPoint != null ">coupon_point = #{couponPoint},</if>
            <if test="saleUser != null ">sale_user = #{saleUser},</if>
            <if test="payPoint != null ">pay_point = #{payPoint},</if>
            <if test="totalPoint != null ">total_point = #{totalPoint},</if>
            <if test="phone != null  and phone != ''">phone = #{phone},</if>
            <if test="donate != null ">donate = #{donate},</if>
            <if test="price != null ">price = #{price},</if>
            <if test="courseDuration != null ">course_duration = #{courseDuration},</if>
            <if test="consumeTime != null ">consume_time = #{consumeTime},</if>
            <if test="orderTime != null ">order_time = #{orderTime},</if>
            <if test="useTime != null ">use_time = #{useTime},</if>
            <if test="validRefundTime != null ">valid_refund_time = #{validRefundTime},</if>
        </trim>
        where order_id = #{orderId}
    </update>


    <delete id="deleteLifeOrderById" parameterType="String">
        delete from life_order where order_id = #{orderId}
    </delete>

    <delete id="deleteLifeOrderByIds" parameterType="String">
        delete from life_order where order_id in 
        <foreach item="orderId" collection="array" open="(" separator="," close=")">
            #{orderId}
        </foreach>
    </delete>

    <select id="selectNowOrder" resultType="string" >
        select distinct phone from life_order
        where date_format(use_time,'%Y-%m-%d') = current_date and course_detail_id = #{courseId}
    </select>



    <insert id="insertLifeOrders">
        insert life_order(
        order_id,pid,
        course_type,
        status, user_id,
        share_id,
        course_id,
        course_detail_id,
        remark,
        coupon_id,
        coupon_point,
        sale_user,
        pay_point,
        total_point,
        phone,
        donate,
        price,
        order_time,
        use_time,
        valid_refund_time
        )
        values
        <foreach collection="lifeOrders" item="item"  separator="," >
            (
            #{item.orderId},
            #{item.pid},
            #{item.courseType},
            #{item.status},
            #{item.userId},
            #{item.shareId},
            #{item.courseId},
            #{item.courseDetailId},
            #{item.remark},
            #{item.couponId},
            #{item.couponPoint},
            #{item.saleUser},
            #{item.payPoint},
            #{item.totalPoint},
            #{item.phone},
            #{item.donate},
            #{item.price},
            #{item.orderTime},
            #{item.useTime},
            #{item.validRefundTime}
            )
        </foreach>
    </insert>


    <select id="getDataDetail" resultType="com.ruoyi.life.domain.dto.LifeDataDetailDto">
        select
        classify.course_classify_id as classifyId,
        classify.course_classify_name as classifyName ,
        detail.course_duration as courseDuration ,
        `order`.from life_order as `order`.consume_time as `time`
        inner join life_course_detail as detail on detail.course_detail_id = order.course_detail_id
        inner join life_course as course on course.course_id = detail.course_id
        inner join life_course_classify as classify on classify.course_classify_id = course.course_classify_pid
        where date_format(consume_time,'%Y-%m-%d') between #{startTime} and #{endTime} and `order`.share_id = #{shareId}
    </select>


    <update id="donateOrder">
        update life_order set donate = 0
        where user_id = #{userId} and donate = 1 and date_format(consume_time,'%Y-%m-%d') = current_date
    </update>

    <select id="getNowCourseDuration" resultType="java.lang.Integer">
        select sum(course_duration) from life_order
        where user_id = #{userId} and date_format(consume_time,'%Y-%m-%d') = current_date and donate = 1
        group by user_id
    </select>
    <select id="getDonate" resultType="com.ruoyi.life.domain.vo.LifeDonateVo">
        select user.wx_img_url as wxImg , user.wx_nick_name ,sum(`order`.course_duration) as `min` from life_order as `order`
        inner join life_user as user on user.user_id = `order`.user_id
        where date_format(consume_time,'%Y-%m-%d') between #{start} and #{end} and `order`.user_id = #{userId} and donate = 0
        group by `order`.user_id
        order by `min` desc
    </select>
    <select id="getSumOrderClassify" resultType="java.lang.Integer">
        select count(0) from life_order as `order`
        inner join life_course as course on course.course_id = `order`.course_id
        where `order`.user_id = #{userId}
        group by course.course_classify_id
    </select>

</mapper>