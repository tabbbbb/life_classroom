<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.life.mapper.LifeCompanyCouponMapper">
    
    <resultMap type="LifeCompanyCoupon" id="LifeCompanyCouponResult">
        <result property="companyCouponId"    column="company_coupon_id"    />
        <result property="couponId"    column="coupon_id"    />
        <result property="companyId"    column="company_id"    />
        <result property="number"    column="number"    />
        <result property="conditionPrice"    column="condition_price"    />
    </resultMap>

    <sql id="selectLifeCompanyCouponVo">
        select company_coupon_id, coupon_id, company_id, `number`, condition_price from life_company_coupon
    </sql>

    <select id="selectLifeCompanyCouponList" parameterType="LifeCompanyCoupon" resultMap="LifeCompanyCouponResult">
        <include refid="selectLifeCompanyCouponVo"/>
        <where>  
            <if test="couponId != null "> and coupon_id = #{couponId}</if>
            <if test="companyId != null "> and company_id = #{companyId}</if>
            <if test="number != null "> and number = #{number}</if>
            <if test="conditionPrice != null "> and condition_price = #{conditionPrice}</if>
        </where>
    </select>
    
    <select id="selectLifeCompanyCouponById" parameterType="Long" resultMap="LifeCompanyCouponResult">
        <include refid="selectLifeCompanyCouponVo"/>
        where company_coupon_id = #{companyCouponId}
    </select>


    <insert id="insertLifeCompanyCoupon" parameterType="LifeCompanyCoupon">
        insert into life_company_coupon
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="companyCouponId != null ">company_coupon_id,</if>
            <if test="couponId != null ">coupon_id,</if>
            <if test="companyId != null ">company_id,</if>
            <if test="number != null ">number,</if>
            <if test="conditionPrice != null ">condition_price,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="companyCouponId != null ">#{companyCouponId},</if>
            <if test="couponId != null ">#{couponId},</if>
            <if test="companyId != null ">#{companyId},</if>
            <if test="number != null ">#{number},</if>
            <if test="conditionPrice != null ">#{conditionPrice},</if>
         </trim>
    </insert>

    <update id="updateLifeCompanyCoupon" parameterType="LifeCompanyCoupon">
        update life_company_coupon
        <trim prefix="SET" suffixOverrides=",">
            <if test="couponId != null ">coupon_id = #{couponId},</if>
            <if test="companyId != null ">company_id = #{companyId},</if>
            <if test="number != null ">number = #{number},</if>
            <if test="conditionPrice != null ">condition_price = #{conditionPrice},</if>
        </trim>
        where company_coupon_id = #{companyCouponId}
    </update>

    <delete id="deleteLifeCompanyCouponById" parameterType="Long">
        delete from life_company_coupon where company_coupon_id = #{companyCouponId}
    </delete>

    <delete id="deleteLifeCompanyCouponByIds" parameterType="String">
        delete from life_company_coupon where company_coupon_id in
        <foreach item="companyCouponId" collection="array" open="(" separator="," close=")">
            #{companyCouponId}
        </foreach>
    </delete>



    <select id="selectLifeCompanyCouponByPrice" resultMap="LifeCompanyCouponResult">
        <include refid="selectLifeCompanyCouponVo"/>
        where condition_price = (
          select condition_price from  life_company_coupon
          where #{price} >= condition_price
          order by condition_price desc
          limit 1
        )
    </select>
    <select id="selectLifeCompanyCouponVoList"
            resultType="com.ruoyi.life.domain.vo.system.LifeCompanyCouponVo">
        select companycoupon.company_coupon_id as companyCouponId,
            company.company_name as companyName,
            coupon.`name` as `couponName`,
            coupon.type as `couponType` ,
            companycoupon.number as `number`,
            companycoupon.condition_price as conditionPrice
            from life_company_coupon as companycoupon
        inner join life_company as company on company.company_id = companycoupon.company_id
        inner join life_coupon as coupon on coupon.coupon_id = companycoupon.coupon_id
        <trim prefix="where" suffixOverrides="and|or">
            <if test="companyName != null and companyName != ''">
                company.company_name like concat('%',#{companyName},'%') and
            </if>
            <if test="couponName != null and couponName != ''">
                coupon.name like concat('%',#{couponName},'%') and
            </if>
            <if test="couponType != null ">
                coupon.type = #{couponType} and
            </if>
        </trim>

    </select>


    <delete id="deleteCompanyCouponByCompanyIds">
        delete from life_company_coupon
        where company_id in 
        <foreach collection="companyIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>


    <delete id="deleteCompanyCouponByCouponIds">
        delete from life_company_coupon
        where coupon_id in
        <foreach collection="couponIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>

</mapper>